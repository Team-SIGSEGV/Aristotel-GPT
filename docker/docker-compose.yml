version: '3.8'

services:
  # Сервис для обучения модели
  training:
    build:
      context: ..
      dockerfile: docker/Dockerfile.training
    volumes:
      - ../models:/app/models
      - ../configs:/app/configs
    environment:
      - PYTHONPATH=/app
    command: ["--config", "configs/training_config.yaml"]
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # Сервис для инференса
  inference:
    build:
      context: ..
      dockerfile: docker/Dockerfile.inference
    ports:
      - "8000:8000"
    volumes:
      - ../models:/app/model
      - ../configs/inference_config.yaml:/app/config.yaml
    environment:
      - MODEL_PATH=/app/model
      - CONFIG_PATH=/app/config.yaml
      - API_HOST=0.0.0.0
      - API_PORT=8000
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus для мониторинга
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  # Grafana для визуализации метрик
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ../monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ../monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data: