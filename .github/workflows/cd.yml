name: CD Pipeline

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ secrets.DOCKERHUB_USERNAME }}/aristotle-training
          ${{ secrets.DOCKERHUB_USERNAME }}/aristotle-inference
        tags: |
          type=semver,pattern={{version}}
          type=ref,event=branch
          type=sha,format=short
    
    - name: Build and push training image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/Dockerfile.training
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push inference image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/Dockerfile.inference
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Configure SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Add host key
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to server
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        IMAGE_TAG: ${{ github.ref_name }}
      run: |
        ssh $DEPLOY_USER@$DEPLOY_HOST "mkdir -p $DEPLOY_PATH"
        scp docker/docker-compose.yml $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/
        scp configs/inference_config.yaml $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH/
        ssh $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_PATH && \
          echo 'IMAGE_TAG=$IMAGE_TAG' > .env && \
          docker-compose pull && \
          docker-compose up -d inference grafana prometheus"
    
    - name: Verify deployment
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      run: |
        ssh $DEPLOY_USER@$DEPLOY_HOST "docker ps | grep aristotle-inference"
