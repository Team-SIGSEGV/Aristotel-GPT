name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        pip install -r requirements/base.txt
    
    - name: Lint with flake8
      run: |
        flake8 src tests scripts
    
    - name: Check formatting with black
      run: |
        black --check src tests scripts
    
    - name: Check imports with isort
      run: |
        isort --check src tests scripts

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -r requirements/base.txt
        pip install -r requirements/training.txt
        pip install -r requirements/inference.txt
        pip install -e .
    
    - name: Test with pytest
      run: |
        pytest tests/ --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build-docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build training image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/Dockerfile.training
        push: false
        tags: aristotle-training:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build inference image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/Dockerfile.inference
        push: false
        tags: aristotle-inference:test
        cache-from: type=gha
        cache-to: type=gha,mode=max